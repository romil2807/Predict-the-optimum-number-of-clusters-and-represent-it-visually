# -*- coding: utf-8 -*-
"""Task_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15ZYyvl4sakMQtEb1h2wuzjmnu_YaifbF

# **Romil Shah**
# Task: Predict the optimum number of clusters and represent it visually.

# Importing Libraries
"""

import numpy as np
 import pandas as pd
 import matplotlib.pyplot as plt
 from sklearn.cluster import KMeans

"""# Loading data"""

df=pd.read_csv('/content/Iris.csv')
df.head()

df.tail()

df.isnull().sum()

"""# Data Information"""

df.info()

df.describe()

"""# Finding optimal clusters using elbow method"""

X=df.iloc[:,[1,2,3,4]].values

wcss=[]
for i in range(1,11):
  Kmeans=KMeans(n_clusters=i,init='k-means++',max_iter=300,n_init=10,random_state=0)
  Kmeans.fit(X)
  wcss.append(Kmeans.inertia_)

plt.plot(range(1,11),wcss)  
plt.title("Elbow Method")
plt.xlabel("No. of clusters")
plt.ylabel("wcss")
plt.show()

"""# KMeans Clustering"""

Kmeans = KMeans(n_clusters = 3, init = 'k-means++', random_state =0)
y_kmeans = Kmeans.fit_predict(X)

plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')
plt.scatter(Kmeans.cluster_centers_[:, 0], Kmeans.cluster_centers_[:, 1], s = 100, c = 'yellow', label = 'Centroids')
plt.title('Cluster Visualisation')
plt.legend()
plt.show()

pd.DataFrame(Kmeans.cluster_centers_)